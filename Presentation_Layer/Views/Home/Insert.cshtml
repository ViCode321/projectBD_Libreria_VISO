@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Insertar";
}

@model List<Model_Layer.Product>

<div class="container text-center">
    <div class="row">
        <div class="col-12">
            <h1 class="display-4">Insertar Producto</h1>
        </div>
    </div>
    <form method="post" action="@Url.Action("InsertProduct")">
        <div class="row">
            <div class="col-6 mt-2">
                <div class="form-group d-flex align-items-center mt-2">
                    <input type="hidden" id="id" name="id" value="0" />
                </div>
                <div class="form-group d-flex align-items-center mt-2">
                    <label for="inputname" class="w-25">Descripción:</label>
                    <input type="text" id="name" name="name" class="form-control w-75" placeholder="Ingrese la Descripción del producto">
                    @Html.ValidationMessage("name", new { @class = "text-danger" })
                </div>
                <div class="form-group d-flex align-items-center mt-2">
                    <label for="inputproveedor" class="w-25">Proveedor:</label>
                    <select id="proveedor" name="proveedor" class="form-control w-75">
                        <option value="Gonper">Gonper</option>
                        <option value="Hispamer">Hispamer</option>
                    </select>
                </div>
                <div class="form-group d-flex align-items-center mt-2">
                    <label for="inputcategoria" class="w-25">Categoria:</label>
                    <input type="text" id="categoria" name="categoria" class="form-control w-75" placeholder="Categoria">
                    @Html.ValidationMessage("categoria", new { @class = "text-danger" })
                </div>
                <div class="form-group d-flex align-items-center mt-2">
                    <label for="inputmarca" class="w-25">Marca:</label>
                    <input type="text" id="marca" name="marca" class="form-control w-75" placeholder="Marca">
                    @Html.ValidationMessage("marca", new { @class = "text-danger" })
                </div>
            </div>
            <!--4 Inputs a la derecha-->
            <div class="col-6 mt-2">
                <div class="form-group d-flex align-items-center mt-2">
                    <label for="inputcantidad" class="w-25">Cantidad:</label>
                    <input type="number" id="cantidad" name="cantidad" class="form-control w-75" placeholder="0" min="0" onblur="validarNumeroNegativo(this)">
                    @Html.ValidationMessage("cantidad", new { @class = "text-danger" })
                </div>
                <div class="form-group d-flex align-items-center mt-2">
                    <label for="inputcosto" class="w-25">Costo:</label>
                    <input type="number" id="costo" name="costo" class="form-control w-75" placeholder="0" min="0" step="0.01" onblur="validarNumeroNegativo(this)">
                    @Html.ValidationMessage("Costo", "", new { @class = "text-danger" })
                </div>
                <div class="form-group d-flex align-items-center mt-2">
                    <label for="inputprecio" class="w-25">Precio:</label>
                    <input type="number" id="precio" name="precio" class="form-control w-75" placeholder="0" min="0" step="0.01" onblur="validarNumeroNegativo(this)">
                    @Html.ValidationMessage("Precio", "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!--Botón para insertar-->
        <div class="row justify-content-center">
            <div class="col-6 mt-2">
                <button type="submit" class="btn btn-primary w-100 m-2">
                    <i class="bx bx-plus"></i> Insertar
                </button>
            </div>
        </div>
    </form>
    <div id="alertMessages">
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.Error
            </div>
        }
    </div>
    <div id="successMessages">
        @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
        {
            <div class="alert alert-success" role="alert">
                @ViewBag.SuccessMessage
            </div>
        }
    </div>
    <!-- Agrega este botón al final de tu vista Search.cshtml -->
    <div class="row justify-content-center">
        <div class="col-6 mt-2">
            <a href="@Url.Action("Insert")" class="btn btn-secondary w-100 m-2">
                <i class="bx bx-refresh"></i> Recargar
            </a>
        </div>
    </div>

    <!--Tabla se resultados-->
    <div class="row">
        <div class="col-12 mt-4">
            <table class="table table-bordered table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Código</th>
                        <th>Descripción</th>
                        <th>Proveedor</th>
                        <th>Categoría</th>
                        <th>Marca</th>
                        <th>Cantidad</th>
                        <th>Costo</th>
                        <th>Precio</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var producto in Model)
                        {
                            <tr>
                                <td>@producto.Id</td>
                                <td onclick="activarEdicion(this)" data-id="@producto.Id" data-columna="Descripcion">@producto.Descripcion</td>
                                <td onclick="activarEdicion(this)" data-id="@producto.Id" data-columna="Proveedor">@producto.ProveedorNombre</td>
                                <td onclick="activarEdicion(this)" data-id="@producto.Id" data-columna="Categoria">@producto.CategoriaNombre</td>
                                <td onclick="activarEdicion(this)" data-id="@producto.Id" data-columna="Marca">@producto.MarcaNombre</td>
                                <td onclick="activarEdicion(this)" data-id="@producto.Id" data-columna="Cantidad">@producto.Cantidad</td>
                                <td onclick="activarEdicion(this)" data-id="@producto.Id" data-columna="Costo">@producto.Costo</td>
                                <td onclick="activarEdicion(this)" data-id="@producto.Id" data-columna="Precio">@producto.Precio</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="9">
                                @if (!string.IsNullOrEmpty(ViewBag.NoResultsMessage) || ViewData.ModelState["searchBy"] != null)
                                {
                                    @ViewBag.NoResultsMessage
                                }
                                else
                                {
                                    @:No se encontraron resultados.
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelector('form').addEventListener('submit', function (event) {
            // Validar cada campo
            if (!validarCampo('proveedor')) {
                event.preventDefault();
                return;
            }

            if (!validarCampo('name')) {
                event.preventDefault();
                return;
            }

            if (!validarCampo('categoria')) {
                event.preventDefault();
                return;
            }

            if (!validarCampo('marca')) {
                event.preventDefault();
                return;
            }

            if (!validarCampo('cantidad')) {
                event.preventDefault();
                return;
            }

            if (!validarCampo('costo')) {
                event.preventDefault();
                return;
            }

            if (!validarCampo('precio')) {
                event.preventDefault();
                return;
            }
        });

        // Función para validar un campo específico
        function validarCampo(idCampo) {
            var valorCampo = document.getElementById(idCampo).value.trim();

            if (valorCampo === '') {
                alert('Por favor, ingrese todos los valores');
                return false;
            }

            return true;
        }
    });
    // Función para validar números negativos
    function validarNumeroNegativo(input) {
        var valor = parseFloat(input.value);
        if (isNaN(valor) || valor < 0) {
            alert('El valor no puede ser negativo. Por favor, ingrese un valor no negativo.');
            input.value = "0"; // O establecer el valor deseado
        }
    }
</script>
